// наследование 1а.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <cmath>

using namespace std;


//Класс Фигуры - базовый класс
class Figure
{
public:
	//Переменные-члены,общие для всех фигур
	int x, y;        //координаты фигуры

	//конструктор по умолчанию 
	Figure() :x(0), y(0) {}//переменные-члены x и y нулями

	//конструктор с параметрами 
	Figure(int x, int y) :x(x), y(y) {}//переменные-члены x и y переданными параметрами

	//Виртуальная функция для вычисления
	virtual double area() const = 0;// функция area возращяет площать фигуры
};

//Класс Прямоугольник - производный класс от фигуры 
class Rectangle :public Figure
{
public:
	//Переменные -члены, специальные для прямоугольника
	int width,height;//Ширена и высота прямоугольника

	//конструктор по умолчанию
	Rectangle():Figure(),width(0),height(0){}////переменные-члены width и height нулями

	//конструктор с параметрами 
	Rectangle(int x,int y,int width,int height):Figure(x,y),width(width),height(height){}//переменные-члены width и height переданными параметрами

	//Переопределение виртуальной функции для вычисления площяди прямоугольника
	double area()const override {//Вычисляет и возращяет площять прямоугольника, перемножая его width и height
		return static_cast<double>(width) * height;
	}
};

int main() {
	setlocale(LC_ALL,"Rus");

	//Создание экземпляра класс Прямоугольник
	Rectangle rectangle(10, 20, 5, 10);

	//Вычисление и вывод площяди прямоугольника 
	cout << "Площать прямоугольника : " << rectangle.area() << endl;
	return 0;
}









// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
